name: Turborepo CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  build-lint-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Build and Package
        run: pnpm --filter product-analyzer-cli run package
      # - name: Lint
      #   run: pnpm run lint
      # - name: Test
      #   run: pnpm run test

  package:
    needs: build-lint-test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Package
        run: pnpm --filter product-analyzer-cli run package
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: product-analyzer-cli-${{ matrix.os }}
          path: apps/cli/product-analyzer-cli*

  package-macos:
    needs: build-lint-test
    strategy:
      matrix:
        include:
          - runner: macos-13
            arch: x64
          - runner: macos-latest
            arch: arm64
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Package
        run: |
          pnpm --filter product-analyzer-cli run package
          mv apps/cli/product-analyzer-cli apps/cli/product-analyzer-cli-macos-${{ matrix.arch }}
      - name: Verify executable
        run: file apps/cli/product-analyzer-cli-macos-${{ matrix.arch }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: product-analyzer-cli-macos-${{ matrix.arch }}
          path: apps/cli/product-analyzer-cli-macos-${{ matrix.arch }}

  version:
    needs: build-lint-test
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.changesets.outputs.hasChangesets }}
      version: ${{ steps.changesets.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install
      - name: Create Release Pull Request or Update Version
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run version
          commit: 'chore: update version and changelog'
          title: 'chore: update version and changelog'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  create-release:
    needs: [package, package-macos, version]
    runs-on: ubuntu-latest
    if: "${{ needs.version.outputs.changed == 'true' || contains(github.event.head_commit.message, 'chore: update version and changelog') }}"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Prepare Release Assets
        run: |
          mkdir -p release_assets
          cp artifacts/product-analyzer-cli-ubuntu-latest/product-analyzer-cli release_assets/product-analyzer-cli-linux
          cp artifacts/product-analyzer-cli-macos-x64/product-analyzer-cli-macos-x64 release_assets/
          cp artifacts/product-analyzer-cli-macos-arm64/product-analyzer-cli-macos-arm64 release_assets/
          cp artifacts/product-analyzer-cli-windows-latest/product-analyzer-cli.exe release_assets/product-analyzer-cli-windows.exe
          chmod +x release_assets/*
          ls -l release_assets
      - name: Create custom changelog
        run: |
          echo "# Release v${{ needs.version.outputs.version }}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## Changes in this release:" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          cat apps/cli/CHANGELOG.md >> RELEASE_NOTES.md
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          version="${{ needs.version.outputs.version }}"
          if [ -z "$version" ]; then
            version=$(node -p "require('./apps/cli/package.json').version")
          fi
          echo "Creating release for version: $version"
          gh release create "v$version" \
            --title "Release v$version" \
            --notes-file RELEASE_NOTES.md \
            release_assets/*